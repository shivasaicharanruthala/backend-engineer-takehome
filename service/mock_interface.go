// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_service is a generated GoMock package.
package service

import (
	model "github/shivasaicharanruthala/backend-engineer-takehome/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReceipts is a mock of Receipts interface.
type MockReceipts struct {
	ctrl     *gomock.Controller
	recorder *MockReceiptsMockRecorder
}

// MockReceiptsMockRecorder is the mock recorder for MockReceipts.
type MockReceiptsMockRecorder struct {
	mock *MockReceipts
}

// NewMockReceipts creates a new mock instance.
func NewMockReceipts(ctrl *gomock.Controller) *MockReceipts {
	mock := &MockReceipts{ctrl: ctrl}
	mock.recorder = &MockReceiptsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReceipts) EXPECT() *MockReceiptsMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockReceipts) Get(receiptID string) (*model.ReceiptGetResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", receiptID)
	ret0, _ := ret[0].(*model.ReceiptGetResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockReceiptsMockRecorder) Get(receiptID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockReceipts)(nil).Get), receiptID)
}

// Insert mocks base method.
func (m *MockReceipts) Insert(receipt *model.Receipt) (*model.ReceiptPostResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", receipt)
	ret0, _ := ret[0].(*model.ReceiptPostResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockReceiptsMockRecorder) Insert(receipt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockReceipts)(nil).Insert), receipt)
}
